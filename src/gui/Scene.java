package gui;

import javax.swing.*;
import java.awt.*;

/**
 * Графический компонент, отображающий произвольное содержимое
 */
public class Scene extends JComponent {

    /**
     * Конструктор компонента
     */
    public Scene() {
        // Устанавливаем начальный размер компонента - 600x400
        setPreferredSize(new Dimension(600, 400));
    }

    /**
     * Этот метод будет вызываться для отрисовки компонента. Параметр g можно использовать для рисования
     * произвольных фигур.
     */
    protected void paintComponent(Graphics g) {
        // Вызов super.paintComponent заполняет весь компонент цветом фона, т.е. просто стирает весь экран
        super.paintComponent(g);

        // Определяем текущие размеры компонента (могут измениться при изменении размера окна)
        int width = getWidth();
        int height = getHeight();
        // Определяем координаты центра компонента, чтобы далее рисовать все относительно центра
        int centerX = width / 2;
        int centerY = height / 2;

        // 1. Рисуем круг красного цвета
        // Устанавливаем текущий цвет - красный
        g.setColor(Color.red);
        // Рисуем овал с радиусами по горизонтали/вертикали (100, 100).
        // Координаты (centerX - 50, centerY - 50) задают левый верхний угол описывающего овал прямоугольника.
        // В данном случае центр овала будет совпадать с центром компонента.
        g.drawOval(centerX - 50, centerY - 50, 100, 100);

        // 2. Рисуем прямоугольник синего цвета
        // Устанавливаем текущий цвет - синий
        g.setColor(Color.blue);
        // Рисуем прямоугольник с размерами по горизонтали/вертикали (60, 60).
        // Координаты (centerX - 30, centerY - 30) задают левый верхний угол прямоугольника.
        // В данном случае центр прямоугольника будет совпадать с центром компонента.
        g.drawRect(centerX - 30, centerY - 30, 60, 60);

        // 3. Рисуем закрашенный прямоугольник зеленого цвета
        // Устанавливаем текущий цвет - зеленый, компоненты RGB=(0, 255, 0).
        g.setColor(new Color(0, 255, 0));
        // Рисуем прямоугольник с размерами по горизонтали/вертикали (40, 40).
        // Координаты (centerX - 20, centerY - 20) задают левый верхний угол прямоугольника.
        // В данном случае центр прямоугольника будет совпадать с центром компонента.
        g.fillRect(centerX - 20, centerY - 20, 40, 40);

        // 4. Рисуем картинку
        // Загружаем картинку
        Image image = getToolkit().getImage(getClass().getResource("house.png"));
        // Координаты (centerX - 8, centerY - 8) задают левый верхний угол картинки.
        g.drawImage(image, centerX - 8, centerY - 8, this);

        // 5. Рисуем текст черного цвета
        // Устанавливаем текущий цвет - черный
        g.setColor(Color.black);
        // Строка, которую будем рисовать
        String str = "Hello world!";
        // Определяем ширину строки при отображении на экране
        int strWidth = g.getFontMetrics().stringWidth(str);
        // Рисуем строку так, чтобы она была выровнена по центру компонента по горизонтали.
        // Координаты (centerX - strWidth / 2, centerY - 60) задают координаты базовой линии строки.
        // Определение базовой линии: http://ru.wikipedia.org/wiki/Базовая линия (дизайн шрифта)
        g.drawString(str, centerX - strWidth / 2, centerY - 60);
    }

    public static void main(String[] args) {
        // Создаем главное окно приложения с заголовком
        JFrame frame = new JFrame("Simple drawing component");
        // Создаем компонент...
        Scene scene = new Scene();
        // ...и добавляем его в окно
        frame.add(scene);
        // Авто-определение размера окна
        frame.pack();
        // Перемещение окна в центр экрана
        frame.setLocationRelativeTo(null);
        // Показываем окно на экране
        frame.setVisible(true);
    }
}
